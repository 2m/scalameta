@import scala.meta.Readme._
@import Main._
@import scala.meta._

@sect("scala.meta", versionBadge)

  @p
    Scala.meta is a clean-room implementation of a metaprogramming toolkit for Scala,
    designed to be simple, robust and portable.
    We are striving for scala.meta to become a successor of scala.reflect,
    the current de facto standard in the Scala ecosystem.

  @p
    Scala.meta provides exclusive functionality that's unprecedented in the Scala ecosystem.
    Our killer feature is abstract syntax trees that capture the code exactly as it is written -
    with all the original formatting and attention to minor syntactic details.

  @p
    With scala.meta, we are building a community of next-generation tooling for Scala.
    @lnk("Codacy", "https://codacy.com/")'s Scala engine and @lnk("Scalafmt", "http://scalafmt.org")
    take advantage of our unique features and deliver user experiences
    that have been unreachable for most of the traditional Scala tools.

  @sect{Getting started}
    @p
      To get started with scala.meta, add the following to your @code("build.sbt"):

    @hl.scala
      libraryDependencies += "org.scalameta" %% "scalameta" % "@Versions.stable"

    @p
      Next, you'll need to add a single wildcard import to the files where you'll
      be using scala.meta. Unlike with scala.reflect, the standard metaprogramming
      library in Scala 2.10 and 2.11, nothing else is necessary:

    @hl.scala
      import scala.meta._

@raw
  <a href="https://github.com/scalameta/scalameta"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/652c5b9acfaddf3a9c326fa6bde407b87f7be0f4/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6f72616e67655f6666373630302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_orange_ff7600.png"></a>
  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-78566375-1', 'auto');
    ga('send', 'pageview');
  </script>
  <script>
    // NOTE: Disables the sidebar because we don't really have anything to show there yet.
    // Gonna re-enable it back by deleting this <script/> block once we have something interesting.
    (function() {
      controller = scalatex.scrollspy.Controller();
      controller.main = function(config) {}
    })()
  </script>